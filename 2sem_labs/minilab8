import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline

def f(x):
    return np.sin(x) + 0.5 * x ** 2 - 0.1 * x ** 3

np.random.seed(42)
x = np.linspace(-5, 5, 100).reshape(-1, 1)
y = f(x).ravel() + np.random.normal(0, 0.3, size=len(x))

models = [
    ("Линейная регрессия", LinearRegression()),
    ("SVR (RBF ядро)", SVR(kernel='rbf', C=100, gamma=0.1, epsilon=0.1)),
    ("Случайный лес", RandomForestRegressor(n_estimators=100, random_state=42))
]

plt.figure(figsize=(18, 6))

for i, (name, model) in enumerate(models, 1):
    model.fit(x, y)
    y_pred = model.predict(x)
    mse = mean_squared_error(y, y_pred)

    plt.subplot(1, 3, i)
    plt.scatter(x, y, color='blue', label='Данные с шумом', alpha=0.5)
    plt.plot(x, f(x), color='green', label='Исходная функция', linewidth=2)
    plt.plot(x, y_pred, color='red', label='Предсказание', linewidth=2)
    plt.title(f"{name}\nMSE: {mse:.4f}")
    plt.legend()
    plt.grid(True)

plt.tight_layout()
plt.show()
